version: "3.9"


networks:
  graph_fga:
    name: graph_fga


services:
  server_grpc:
    build:
      context: .
      dockerfile: ./compose/grpc/Dockerfile
    volumes:
      - ./src:/app
    command: python server_grpc/main.py
    depends_on:
      graph_db:
        condition: service_healthy
    networks:
      - graph_fga
    env_file: .envs

  overseer_backend:
    build:
      context: .
      dockerfile: ./compose/overseer_backend/Dockerfile
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://overseer_backend:8000/health" ]
      interval: 5s
      timeout: 10s
      retries: 15
    volumes:
      - ./src:/app
    command: uvicorn overseer_backend.main:app --host 0.0.0.0 --port 8000
    depends_on:
      graph_db:
        condition: service_healthy
    networks:
      - graph_fga
    env_file: .envs

  graph_db:
    image: memgraph/memgraph-platform
    networks:
      - graph_fga
    healthcheck:
      test: ["CMD", "nc", "-z", "-v", "graph_db", "7687"]
      interval: 5s
      timeout: 5s
      retries: 3
    ports:
      - "4000:3000"
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G

  overseer_chat:
    build:
      context: .
      dockerfile: ./compose/overseer_chat/Dockerfile
    volumes:
      - ./src/overseer_chat:/app
    command: npm run dev -- --host 0.0.0.0
    networks:
      - graph_fga
    env_file: .envs

  nginx:
    build:
      context: .
      dockerfile: compose/nginx/Dockerfile
    depends_on:
      - overseer_backend
    networks:
      - graph_fga
    volumes:
      - ./compose/nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "0.0.0.0:80:80"
