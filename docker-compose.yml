version: "3.9"


networks:
  graph_fga:
    name: graph_fga


volumes:
  frontend_node_modules: {}

services:
  server_grpc:
    build:
      context: .
      dockerfile: ./compose/grpc/Dockerfile
    volumes:
      - ./src:/app
    command: python server_grpc/main.py
    depends_on:
      graph-db:
        condition: service_healthy
    networks:
      - graph_fga
    env_file: .envs

#  frontend:
#    build:
#      context: .
#      dockerfile: ./compose/frontend/Dockerfile
#    volumes:
#      - ./src/frontend:/app
#      - frontend_node_modules:/app/node_modules/
#    networks:
#      - graph_fga
#    env_file: .envs
#    labels:
#      - traefik.http.routers.frontend.rule=PathPrefix("/")

  backend:
    build:
      context: .
      dockerfile: ./compose/backend/Dockerfile
    volumes:
      - ./src/backend:/app/backend
    command: python backend/main.py
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - graph_fga
    env_file: .envs
    labels:
      - traefik.http.routers.backend.rule=PathPrefix("/api")
      - traefik.http.middlewares.strip-backend.stripprefix.prefixes=/api
      - traefik.http.routers.backend.middlewares=strip-backend

  graph-db:
    image: memgraph/memgraph-platform
    networks:
      - graph_fga
    healthcheck:
      test: ["CMD", "nc", "-z", "-v", "graph-db", "7687"]
      interval: 5s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G

  mongodb:
    image: mongo:7.0.6
    networks:
      - graph_fga
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb:27017/test --quiet
      interval: 5s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G

  reverse-proxy:
    image: traefik:v3.0
    command:
      - --api.insecure=true
      - --providers.docker
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - graph_fga